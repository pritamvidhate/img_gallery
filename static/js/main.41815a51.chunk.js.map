{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["Imagecard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","id","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","ImageCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KA2CeA,EAzCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACA,sBAAKC,UAAY,kEAAjB,UACI,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,SAASH,UAAY,WACvD,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,sCAAf,sBACcH,EAAMO,QAEpB,+BACI,+BACI,6CACKP,EAAMQ,SAGf,+BACI,iDACKR,EAAMS,aAGf,+BACI,6CACKT,EAAMU,eAKvB,qBAAKP,UAAU,YAAf,SACCF,EAAKU,KAAI,SAAAC,GAAG,OACT,uBAAuBT,UAAU,6FAAjC,cAEES,IAFWZ,EAAMa,aCEhBC,EAhCK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OAEI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SARG,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAMqBd,UAAU,kBAAtC,SACI,sBAAKA,UAAU,oEAAf,UAGA,uBAAOmB,SAAW,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QACxCrB,UAAY,uHAEZsB,KAAO,OAAOC,YAAc,iBAG5B,wBAAQvB,UAAW,kJAAkJsB,KAAK,SAA1K,4BCkBDE,MArCf,WAAgB,IAAD,EAEeX,mBAAS,IAFxB,mBAENY,EAFM,KAEEC,EAFF,OAGqBb,oBAAS,GAH9B,mBAGNc,EAHM,KAGKC,EAHL,OAIWf,mBAAS,IAJpB,mBAINgB,EAJM,KAIAC,EAJA,KAgBb,OAVAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC1B,CAACX,IAGD,mCACE,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAc,SAACE,GAAD,OAAUgB,EAAQhB,OAE3Ca,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,sCAAd,6BAIpC2B,EAAY,oBAAI3B,UAAU,sCAAd,wBACM,qBAAKA,UAAU,8BAAf,SACfyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC+C,EAAD,CAA4B/C,MAAOA,GAAjBA,EAAMa,eC3BtCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.41815a51.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Imagecard = ({image}) => {\r\n    const tags = image.tags.split(',');\r\n\r\n    return (\r\n    <div className = \"max-w-sm bg-gray-100 rounded overflow-hidden shadow-lg mb-2 m-2\">\r\n        <img src={image.webformatURL} alt=\"images\" className = \"w-full\"/>\r\n        <div className=\"px-6 py-4\">\r\n            <div className=\"font-bold text-red-500 text-xl mb-2\">\r\n                Photo by {image.user}\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <strong>Views: </strong>\r\n                        {image.views}\r\n                </li>\r\n\r\n                <li>\r\n                    <strong>Downloads: </strong>\r\n                        {image.downloads}\r\n                </li>\r\n\r\n                <li>\r\n                    <strong>Likes: </strong>\r\n                        {image.likes}\r\n                </li>\r\n        \r\n            </ul>\r\n        </div>\r\n        <div className=\"px-6 py-4\">\r\n        {tags.map(tag =>(\r\n            <span key = {image.id} className=\"inline-block bg-gray-200 rounded-full\r\n            px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n            #{tag}\r\n            </span>\r\n        ))}\r\n        \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Imagecard;\r\n","import React, { useState } from 'react'\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit = {onSubmit} className=\"w-full max-w-sm\">\r\n                <div className=\"flex items-center border-1 border-b-2\r\n                border-teal-500 py-2 px-2\">\r\n\r\n                <input onChange ={e => setText(e.target.value)} \r\n                className = \"appearance-none bg-transparent border-none w-full\\\r\n                text-gray-700 mr-20 py-2 px-2 leading-tight focus:outline-none\"\r\n                type = \"text\" placeholder = \"Search Image\"     \r\n                />    \r\n                \r\n                <button className =\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\" type=\"submit\">\r\n                Search\r\n                </button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React, {useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() =>{\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  },[term]);\n\n  return (\n    <>\n      <div className=\"container mx-auto\">\n        <ImageSearch searchText = {(text) => setTerm(text)}/>\n        \n        {!isLoading && images.length === 0 && <h1 className=\" text-6xl text-center mx-auto mt-32\" >\n        No images found</h1>}\n        \n        {\n          isLoading ? <h1 className=\" text-6xl text-center mx-auto mt-32\" >\n          Loading...</h1> : <div className=\"grid grid-cols-3 grid-gap-4\">\n            {images.map(image =>(\n              <ImageCard key = {image.id} image={image}/>\n            ))}\n          </div>\n        }\n      </div>\n      </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}